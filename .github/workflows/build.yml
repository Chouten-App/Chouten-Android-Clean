name: Android CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Add Properties to local.properties
        run: |
          echo ${{ secrets.DISCORD_BUG_WEBHOOK_EXTRA }} >> local.properties
          echo "store_password = ${{ secrets.SIGNING_STORE_PASSWORD }}" >> local.properties
          echo "key_alias = ${{ secrets.SIGNING_KEY_ALIAS }}" >> local.properties
          echo "key_password = ${{ secrets.SIGNING_KEY_PASSWORD }}" >> local.properties
        
        # Here we need to decode keystore.jks from base64 string and place it
        # in the folder specified in the release signing configuration
      - name: Decode Keystore
        run: |
          echo ${{ secrets.KEYSTORE }} | base64 -d > app/keystore/android_keystore.jks

      # Build and sign APK ("-x test" argument is used to skip tests)
      - name: Build APK
        run: ./gradlew :app:assembleDebug -x test

      # Show information about the APK's signing certificates
      #- name: Verify Signature
      #  run: $ANDROID_SDK_ROOT/build-tools/33.0.1/apksigner verify --print-certs app/build/outputs/apk/release/Chouten.apk

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: Chouten
          path: "app/build/outputs/apk/debug/app-debug.apk"

      - name: Upload the APK to Discord
        shell: bash
        run: |
          curl -F "debug=@app/build/outputs/apk/debug/app-debug.apk" ${{ secrets.DISCORD_WEBHOOK_URL }}
